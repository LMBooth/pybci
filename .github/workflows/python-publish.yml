name: pypi publish

on:
  push:
    branches: [ main ]
  release:
    types: [ created ]

defaults:
  run:
    shell: bash

jobs:
  deploy:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: "ubuntu-22.04"
            os: "ubuntu-latest"
            pyarch: "x64"
          - name: "windows-x64"
            os: "windows-latest"
            arch: "amd64"
            pyarch: "x64"
          - name: "windows-x86"
            os: "windows-latest"
            arch: "i386"
            pyarch: "x86"
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
        pip install twine
    - name: Build package
      run: python -m build
    - name: Publish package to TestPyPI
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: twine upload --repository-url https://test.pypi.org/legacy/ dist/*
    - name: Publish package to PyPI
      if: github.event_name == 'release' && github.event.action == 'created'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: twine upload dist/*
