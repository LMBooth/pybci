version: 1.2.{build}
build: off

environment:
  global:
    PYLSL_LIB: lsl.dll
  matrix:
    - ID: Ubuntu
      APPVEYOR_BUILD_WORKER_IMAGE: ubuntu2104
      PY:  3.9
    - ID: macOS
      APPVEYOR_BUILD_WORKER_IMAGE: macOS
      PY: 3.9
    - ID: VS2019_Py311
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      PYTHON: "C:\\Python311-x64"
    - ID: VS2019_Py310
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      PYTHON: "C:\\Python310-x64"
    - ID: VS2019_Py39
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      PYTHON: "C:\\Python39-x64"

matrix:
  fast_finish: true
  
install:

  - sh: |
      if [[ $APPVEYOR_BUILD_WORKER_IMAGE == "ubuntu" ]]; then
          sudo apt-get update
          sudo apt-get install -y python3-pip
          export PATH=$PYTHON:$PYTHON/Scripts:$PATH
      elif [[ $APPVEYOR_BUILD_WORKER_IMAGE == "macOS" ]]; then
          export PATH=$PYTHON:$PYTHON/Scripts:$PATH
      fi
  - ps: |
      if ($env:APPVEYOR_BUILD_WORKER_IMAGE -match "Visual Studio 2019") {
          $env:PATH = "$env:PYTHON;$env:PYTHON\Scripts;$env:PATH"
      }
      
  - ps: $ErrorActionPreference = 'Stop'; if ($env:APPVEYOR_BUILD_WORKER_IMAGE -match "Visual Studio 2019") { $env:PATH = "$env:PYTHON;$env:PYTHON\Scripts;$env:PATH" }
  - sh: if [[ $APPVEYOR_BUILD_WORKER_IMAGE == "ubuntu" ]]; then set -e; export PATH=$PYTHON:$PYTHON/Scripts:$PATH; fi
  - sh: if [[ $APPVEYOR_BUILD_WORKER_IMAGE == "macOS" ]]; then set -e; export PATH=$PYTHON:$PYTHON/Scripts:$PATH; fi
  # Upgrade pip, setuptools, wheel
  - sh: |
      if [[ $APPVEYOR_BUILD_WORKER_IMAGE == "ubuntu" || $APPVEYOR_BUILD_WORKER_IMAGE == "macOS" ]]; then
          python3 -m pip install --upgrade pip
          python3 --version
          pip3 --version
      fi
  - ps: |
      if ($env:APPVEYOR_BUILD_WORKER_IMAGE -match "Visual Studio 2019") {
          python -m pip install --upgrade pip
          python --version
          pip --version
      }
  
  # Download and unzip liblsl
  - ps: |
      if ($env:APPVEYOR_BUILD_WORKER_IMAGE -match "Visual Studio 2019") {
          Invoke-WebRequest -Uri 'https://github.com/sccn/liblsl/releases/download/v1.16.2/liblsl-1.16.2-Win_amd64.zip' -OutFile 'liblsl.zip'
          Expand-Archive -Path liblsl.zip -DestinationPath liblsl
      }
  - sh: |
      if [[ $APPVEYOR_BUILD_WORKER_IMAGE == "ubuntu" ]]; then
          wget https://github.com/sccn/liblsl/releases/download/v1.16.2/liblsl-1.16.2-bionic_amd64.deb -O liblsl.deb
          dpkg -x liblsl.deb liblsl
      elif [[ $APPVEYOR_BUILD_WORKER_IMAGE == "macOS" ]]; then
          wget https://github.com/sccn/liblsl/releases/download/v1.16.2/liblsl-1.16.2-OSX_amd64.tar.bz2 -O liblsl.tar.bz2
          tar xjf liblsl.tar.bz2 -C liblsl
      fi
  
  # Move DLL to correct directory (Windows) or Set PYLSL_LIB environment variable (Linux, macOS)
  - ps: |
      if ($env:APPVEYOR_BUILD_WORKER_IMAGE -match "Visual Studio 2019") {
          Move-Item liblsl/bin/lsl.dll $env:PYTHON/Lib/site-packages/
          $env:PYLSL_LIB="$env:PYTHON\Lib\site-packages\lsl.dll"
      }
  - sh: |
      if [[ $APPVEYOR_BUILD_WORKER_IMAGE != "Visual Studio" ]]; then
          export PYLSL_LIB=$PWD/liblsl/lib/liblsl64.so
      fi
  - sh: |
      python3 --version  # Check Python version    
  - sh: |
      python3.9 --version  # Check Python 3.9 version
# install dependencies
  - ps: |
      pip uninstall -y urllib3
      pip install --upgrade urllib3>=2.0.5
      pip install .
      pip install pytest
      pip install pytest-timeout
      pip install ruff
  - sh: |
      python3 -m pip install --upgrade urllib3>=2.0.5
      python3 -m pip install .
      python3 -m pip install pytest
      python3 -m pip install pytest-timeout
      python3 -m pip install ruff

# Exit if error
  - ps: if ($env:APPVEYOR_BUILD_WORKER_IMAGE -match "Visual Studio" -and $LastExitCode -ne 0) { Write-Host "Command exited with code $LastExitCode" }
  - sh: if [[ $APPVEYOR_BUILD_WORKER_IMAGE != "Visual Studio" && $? != 0 ]]; then echo "Command exited with code $?"; fi


test_script:
  - "echo 'About to run tests...'"
  - ps: |
      $env:PYTEST_ERRORLEVEL=0
      try {
        pytest Tests/
      } catch {
        $env:PYTEST_ERRORLEVEL=$_.Exception.HResult
      }
  - sh: |
      PYTEST_ERRORLEVEL=0
      pytest Tests/ || PYTEST_ERRORLEVEL=$?
  - ps: |
      if ($env:APPVEYOR_BUILD_WORKER_IMAGE -match "Visual Studio" -and $env:PYTEST_ERRORLEVEL -ne 0) {
        echo 'Pytest failed. Terminating python process.'
        Stop-Process -Name python -Force
      }
  - sh: |
      if [[ $APPVEYOR_BUILD_WORKER_IMAGE != "Visual Studio" && $PYTEST_ERRORLEVEL != 0 ]]; then
        echo 'Pytest failed. Terminating python process.'
        pkill python
      fi
  - "ruff ."
  - "echo 'Finished running tests.'"
  - ps: if ($env:APPVEYOR_BUILD_WORKER_IMAGE -match "Visual Studio" -and $LastExitCode -ne 0) { Write-Host "Command exited with code $LastExitCode" }
  - sh: if [[ $APPVEYOR_BUILD_WORKER_IMAGE != "Visual Studio" && $? != 0 ]]; then echo "Com
