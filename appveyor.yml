version: 1.2.{build}
build: off

environment:
  global:
    PYLSL_LIB: /home/appveyor/.local/lib/python3.10/site-packages/pylsl/lib/liblsl.so
  matrix:
    - ID: VS2019_Py311
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      PYTHON: "C:\\Python311-x64"
      PYTHON_VERSION: "3.11"
    - ID: VS2019_Py310
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      PYTHON: "C:\\Python310-x64"
      PYTHON_VERSION: "3.10"
    - ID: VS2019_Py39
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      PYTHON: "C:\\Python39-x64"
      PYTHON_VERSION: "3.9"
    - ID: macOS
      APPVEYOR_BUILD_WORKER_IMAGE: macos-monterey
      PYTHON: "3.9"
      PYTHON_VERSION: "3.9"
    - ID: Ubuntu
      APPVEYOR_BUILD_WORKER_IMAGE: ubuntu2204
      PYTHON: "3.10"
      PYTHON_VERSION: "3.10"

matrix:
  fast_finish: true

install:
  # Install dependencies
  - ps: |
      if ($env:APPVEYOR_BUILD_WORKER_IMAGE -eq "Visual Studio 2019") {
        # Update PATH environment variable for Python and Scripts directory
        $env:Path = "$env:PYTHON;$env:PYTHON\Scripts;$env:Path"
        # Check if correct python is being used
        Write-Host "Current Python from Path"
        Get-Command python
        # Other commands
        python -m pip install --upgrade pip
        python --version
        python -m pip --version
        python -m pip install --upgrade urllib3>=2.0.5
        python -m pip install .
        python -m pip install pytest pytest-timeout ruff
        $env:PYLSL_LIB = "lsl.dll"
      }
  - sh: |
      case $APPVEYOR_BUILD_WORKER_IMAGE in
        "ubuntu2204")
          echo "Updating ubuntu system..."
          sudo apt-get update
          sudo apt-get install -y python3-pip cmake git
          python3 -m pip install --upgrade urllib3>=2.0.5
          python3 -m pip install .
          python3 -m pip install pytest pytest-timeout ruff
          ;;
        "macos-monterey")
          echo "Updating Homebrew and installing packages..."
          brew update
          brew install python@3.9
          python3.9 -m pip install --upgrade urllib3>=2.0.5
          python3.9 -m pip install .
          python3.9 -m pip install pytest pytest-timeout ruff
          ;;
      esac
  - sh: |
      set -e  # Exit immediately if a command exits with a non-zero status.
      case $APPVEYOR_BUILD_WORKER_IMAGE in
      "ubuntu2204")
        echo "Cloning liblsl repository..."
        git clone --depth=1 https://github.com/sccn/liblsl.git
        echo "Listing contents of liblsl directory..."
        #ls -alh liblsl
        echo "Configuring liblsl project..."
        cd liblsl
        cmake -S . -B build
        echo "Building liblsl..."
        cmake --build build
        echo "Listing contents of build directory..."
        #ls -alh build
        echo "Creating target directory..."
        ls -alh /home/appveyor/.local/lib/python3.10/site-packages/pylsl
        mkdir -p /home/appveyor/.local/lib/python3.10/site-packages/pylsl/lib
        echo "Copying liblsl.so to target directory..."
        
        # Update the source path based on where the build outputs the library.
        cp build/liblsl.so /home/appveyor/.local/lib/python3.10/site-packages/pylsl/lib/ || exit 1
        ;;
      "macos-monterey")
        # Install LSL
        # Remove conflicting binaries
        rm -f /usr/local/bin/ccmake /usr/local/bin/cmake /usr/local/bin/cpack /usr/local/bin/ctest
        # Install LSL
        brew install --verbose labstreaminglayer/tap/lsl
        #brew install --verbose labstreaminglayer/tap/lsl
        ;;
      esac

# Exit if error
  #- ps: if ($LastExitCode -ne 0) { Write-Host "Command exited with code $LastExitCode"; exit $LastExitCode }
  #- sh: if [[ $? != 0 ]]; then echo "Command exited with code $?"; exit $?; fi

test_script:
  # Run tests
  - "echo 'About to run tests...'"
  - sh: |
      if [[ $APPVEYOR_BUILD_WORKER_IMAGE == "ubuntu2204" ]]; then
        echo 'About to run tests on Ubuntu...'
        # Diagnostic commands
        echo "PYLSL_LIB: $PYLSL_LIB"
        ls -alh /home/appveyor/.local/lib/python3.10/site-packages/pylsl/lib
        echo $PYLSL_LIB
        which python3
        python3 --version
        cd $APPVEYOR_BUILD_FOLDER
        ls -alh Tests/
        export PYTEST_ERRORLEVEL=0
        python3 -m pytest -vv -s Tests/ || PYTEST_ERRORLEVEL=$?
        if [[ $PYTEST_ERRORLEVEL != 0 ]]; then
          echo 'Pytest failed. Terminating python process.'
          pkill -f python3 || echo 'No Python3 process found to terminate.'
        fi
      fi
  - ps: |
      if ($env:APPVEYOR_BUILD_WORKER_IMAGE -ne "ubuntu2204") {
        echo 'About to run tests on non-Ubuntu...'
        $env:PYTEST_ERRORLEVEL=0
        #try {
        python -m pytest -vv -s Tests/ #|| PYTEST_ERRORLEVEL=$?
        #} catch {
        #  $env:PYTEST_ERRORLEVEL=$_.Exception.HResult
        #}
        #if ($LastExitCode -ne 0) { 
        #  Write-Host "Command exited with code $LastExitCode at line number $($MyInvocation.ScriptLineNumber)"; 
        #  exit $LastExitCode 
        #}
      }

  - "ruff ."
  - "echo 'Finished running tests.'"
  #- ps: if ($LastExitCode -ne 0) { Write-Host "Command exited with code $LastExitCode"; exit $LastExitCode }
  #- sh: if [[ $? != 0 ]]; then echo "Command exited with code $?"; exit $?; fi
